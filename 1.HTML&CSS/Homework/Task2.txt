Атрибуты, которые могут быть у любого тега.

• class - задает стилевой класс, который позволяет связать определенный тег со стилевым оформлением.В значении допускается сразу несколько классов.
• accesskey - получаем доступ к элементу с помощью сочетания клавиши. Прим.: <a accesskey="s"> ... </a>
• contenteditable - означает, что элемент доступен для редактирования пользователем. Прим.: contenteditable="true | false"; если true - режим редактирования - вкл., иначе выкл.
• contextmenu - устанавливает контекстное меню для элемента. Прим.: contextmenu="идентификатор"
• dir - задает направление и отображение текста. Прим.: dir={ltr | rtl}
• draggable - определяет является ли элемент перетаскиваемым или нет. Прим.:<element draggable="true | false | auto">
• dropzone - определяет как будут обработаны данные, перетаскиваемые на данный элемент. Приме.: <element dropzone="copy | move | link">
• hidden - скрывает содержимое элемента от просмотра (т. е. элемент не отображается на странице, но доступен через скрипт). Прим.: <element hidden>
• id - задает стилевой идентификатор - уникальное имя элемента. id="name"
• lang - используется для указывания языка, на котором написан текст внутри текущего элемента. Прим.: land="language code"
• spellcheck - говорит надо проверять грамматику и правописание или нет. spellcheck="true | false".
• style - применяется для определения стиля элемента с пом. правил СSS. Прим.: style="правила описания стилей"
• tabindex - устанавливает порядок получения фокуса при переходе между элементами с помощью клавиши tab. Прим.: tabindex="число"
• title - описывает содержимое элемента в виде всплывающей подсказки, кт. появляется при наведение курсора на элемент. Прим.: title="текст"
• translate - определяет, может содержимое данного элемента переводиться или нет. Прим.: <element translate="yes | no">
• атрибуты для обработки событий:
	* onafterprint - Возникает после распечатки документа.
	* onbeforeprint - Возникает перед распечаткой документа.
	* onbeforeunload - Возникает перед выгрузкой документа. С помощью этого события можно предупредить посетителя, желающего покинуть Web-страницу о том, что он не все данные сохранил.
	* onerror - Возникает, если при загрузке документа произошла ошибка.
	* onhashchange - Возникает при изменении hash, т.е. при изменении данных после знака "решетка" ( # ) в адресной строке браузера (в URL).
	* onload - Возникает после успешной загрузки, но до отображения страницы. Используется для вывода заставки, проверки права доступа и других однократных действий при загрузке страницы.
	* onmessage - Возникает, если получено сообщение, отправленное данному объекту windows с помощью функции postMessage();.
	* onpagehide - Возникает, когда пользователь обновляет страницу, уходит со страницы назад или вперед по истории, уходит по ссылке, сохраняет данные формы и т.п.
	* onpageshow - Возникает, когда пользователь переходит на страницу. Похоже на событие onload, но в отличие от него происходит каждый раз, даже если страница загружается из кэша. Например, при переходе назад или вперед по истории.
	* onpopstate - Возникает, когда пользователь переходит на страницу путем выбора её в истории (history) браузера.
	* onresize - Возникает при изменении размера окна браузера.
	* onstorage - Возникает при изменении содержания области (Web Storage) объекта window или document.
	* onunload - Возникает после выгрузки Web-страницы или при закрытии окна браузера.
• data-атрибуты - для любого элемента можно использовать собственные атрибуты, начинающиеся с префикса data-. Это позволяет хранить разную информацию, которая может помочь в работе скриптов, а также для оформления элементов через CSS. Атрибут должен иметь хотя бы один символ в нижнем регистре. Буквы в верхнем регистре хотя и допустимы, но они принудительно будут переведены в нижний регистр, поэтому не дают никакого эффекта. В именах атрибутов можно использовать дополнительные дефисы.
